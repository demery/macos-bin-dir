#!/usr/bin/env bash

message() {
  printf "%-15s %s\n" $1 "$2"
}

# Compare to manifest
#
#  Usage: matches_manifest SOURCE_DIR
#
# Compare the file system to the manifest; if the two do not match return 1;
# otherwise return 0
matches_manifest() {
  mat_sourcedir=$1
  mat_tmp=${TMPDIR:-/tmp}/matches_manifest$$

  if [ $# -ne 1 ]; then
    echo "Invalid argument(s): $*"
    echo "Please provide a single directory name"
    return 1
  fi  
  if [ ! -d $mat_sourcedir ]; then
    echo "Could not find directory: $mat_sourcedir"
    return 1
  fi  
  if [ ! -f $mat_sourcedir/sha1manifest.txt ]; then
    echo "Could not find file: $mat_sourcedir/sha1manifest.txt"
    return 1
  fi  

  mat_manifest_files=$mat_tmp.1
  # echo "sed 's/ \*/  /' $mat_sourcedir/sha1manifest.txt | sed 's/^[a-fA-F0-9][a-fA-F0-9]* *//' | sort > $mat_manifest_files"
  sed 's/ \*/  /' $mat_sourcedir/sha1manifest.txt | sed 's/^[a-fA-F0-9][a-fA-F0-9]* *//' | sort > $mat_manifest_files

  mat_fs_files=$mat_tmp.2
  (
    cd $mat_sourcedir
    find . -type f -iname \*.tif | sort
  ) > $mat_fs_files

  mat_diff=$mat_tmp.3
  diff $mat_manifest_files $mat_fs_files > $mat_diff

  if [ -s $mat_diff ]; then
    mat_results=$mat_tmp.4
    grep "^<" $mat_diff | sed 's/^<  */FILE_NOT_FOUND /' > $mat_results
    grep "^>" $mat_diff | sed 's/^>  */NOT_IN_MANIFEST /' >> $mat_results
    cat $mat_results
    rm -f $mat_tmp.*
    return 1
  else
    rm -f $mat_tmp.*
    return 0
  fi
}

for x 
do
  if [ -e $x/sha1manifest.txt ]; then
    output=`matches_manifest $x`
    if [ $? -eq 0 ]; then
      message MATCHES $x
    else
      message NO_MATCH $x
      echo "$output"
    fi
  else
    message NO_MANIFEST $x
  fi
done
